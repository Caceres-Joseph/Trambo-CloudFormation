Description: Create a VPC with 6 Subnets (3 private and 3 public) and 2 route-tables 

Parameters: 
  #-------------
  # VPC
  VPCName:
    Description: Name VPC
    Type: String
    Default: vpc_joseph
    
  #-------------
  # Subnets

  Subnet1Name:
    Description: Name Subnet 1
    Type: String
    Default: subred1_joseph
  Subnet2Name:
    Description: Name Subnet 2
    Type: String
    Default: subred2_joseph
  Subnet3Name:
    Description: Name Subnet 3
    Type: String
    Default: subred3_joseph
  Subnet4Name:
    Description: Name Subnet 4
    Type: String
    Default: subred4_joseph
  Subnet5Name:
    Description: Name Subnet 5
    Type: String
    Default: subred5_joseph
  Subnet6Name:
    Description: Name Subnet 6
    Type: String
    Default: subred6_joseph

  #-------------
  # Gateway
  GatewayName:
    Description: Gateway name
    Type: String
    Default: gtw_joseph

  #-------------
  # Public route table
  PublicRouteTableName:
    Description: Name Public Route Table
    Type: String
    Default: rtPublic_joseph
    
  #-------------
  # Private route table
  PrivateRouteTableName:
    Description: Name Private Route Table
    Type: String
    Default: rtPrivate_joseph

Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/24
    Private1:
      CIDR: 10.0.0.0/27
    Private2:
      CIDR: 10.0.0.32/27
    Private3:
      CIDR: 10.0.0.64/27
    Public1:
      CIDR: 10.0.0.96/27
    Public2:
      CIDR: 10.0.0.128/27
    Public3:
      CIDR: 10.0.0.160/27

Resources:

  #-------------
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - VPC
          - CIDR
      Tags: 
        - Key: Name
          Value: !Ref 'VPCName'

  #-------------
  # Subnets

  Subred1:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Private1
          - CIDR  
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet1Name'
          
  Subred2:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Private2
          - CIDR  
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet2Name'
  Subred3:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Private3
          - CIDR  
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet3Name'
  Subred4:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Public1
          - CIDR  
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet4Name'
  Subred5:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Public2
          - CIDR  
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet5Name'
  Subred6:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: 
        Fn::FindInMap:
          - SubnetConfig
          - Public3
          - CIDR 
      MapPublicIpOnLaunch: true 
      Tags: 
        - Key: Name
          Value: !Ref 'Subnet6Name'

  #-------------
  # Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: !Ref 'GatewayName' 

  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  #-------------
  # Public Route Table 

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref 'PublicRouteTableName' 

  #Added Gateway
  PublicRoute:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway


  #Adding
  PublicRouteTableAsosociation4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred4 
      RouteTableId: !Ref PublicRouteTable

  PublicRouteTableAsosociation5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred5 
      RouteTableId: !Ref PublicRouteTable
  
  PublicRouteTableAsosociation6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred6 
      RouteTableId: !Ref PublicRouteTable

  #-------------
  # Private Route Table 

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref 'PrivateRouteTableName' 

  #Adding
  PublicRouteTableAsosociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred1
      RouteTableId: !Ref PrivateRouteTable
      
  PublicRouteTableAsosociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred2
      RouteTableId: !Ref PrivateRouteTable

  PublicRouteTableAsosociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subred3
      RouteTableId: !Ref PrivateRouteTable
 

Outputs:
  idVPC:
    Description: ID VPC
    Value: !Ref VPC

  IdSubRed4:
    Description: ID public subnet
    Value: !Ref Subred4
  
  IdSubRed5:
    Description: ID public subnet
    Value: !Ref Subred5
  
  IdSubRed6:
    Description: ID public subnet
    Value: !Ref Subred6
